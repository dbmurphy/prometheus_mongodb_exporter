name: Go

on:
  schedule:
    # run every Sunday
    - cron: "0 13 * * 0"
  push:
    branches:
      - master
      - exporter_v2
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.14.x
          - 1.15.x
        image:
          - mongo:3.6
          - mongo:4.0
          - mongo:4.2
          - mongo:4.4
          - percona/percona-server-mongodb:3.6
          - percona/percona-server-mongodb:4.0
          - percona/percona-server-mongodb:4.2
        os: [ubuntu-latest]
        may-fail: [false]

        include:
          # test only one image on tip to detect major Go changes earlier
          # without wasting too much time on CI
          - go-version: tip
            image: mongo:4.2
            os: ubuntu-latest
            may-fail: true

    continue-on-error: ${{ matrix.may-fail }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go release
        if: matrix.go-version != 'tip'
        uses: percona-platform/setup-go@v2.1.1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up Go tip
        if: matrix.go-version == 'tip'
        run: |
          git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
          cd $HOME/gotip/src
          ./make.bash
          echo "::set-env name=GOROOT::$HOME/gotip"
          echo "::add-path::$HOME/gotip/bin"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Initialize dependencies and linters
        run: |
          make init

      - name: Test
        run: |
          TEST_MONGODB_IMAGE=${{ matrix.image }} make test-cluster
          make test
          make test-cluster-clean

      - name: Run checks/linters
        run: |
          # use GITHUB_TOKEN because only it has access to GitHub Checks API
          bin/golangci-lint run -c=.golangci-required.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-check
          bin/golangci-lint run -c=.golangci.yml --out-format=line-number | env REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }} bin/reviewdog -f=golangci-lint -level=error -reporter=github-pr-review

      - name: Diff
        run: |
          make format
          git diff --exit-code
